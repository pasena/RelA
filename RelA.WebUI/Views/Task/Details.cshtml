@using RelA.Domain.Entities
@model RelA.WebUI.Models.TaskDetailsViewModel
@if (false)
{ <script src="../../Scripts/jquery-1.7.2-vsdoc.js" type="text/javascript"></script> }
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript" language="javascript">
    $(document).ready(function () {
        $("#ChangesSection").click(function () {
            if ($("#divChanges").is(":visible")) {
                $("#divChanges").hide();
                $(this).text("Modificações [+]");
            }
            else {
                $("#divChanges").show();
                $(this).text("Modificações [-]");
            }
        });

        $("#HistorySection").click(function () {
            if ($("#divHistory").is(":visible")) {
                $("#divHistory").hide();
                $(this).text("Historico [+]");
            }
            else {
                $("#divHistory").show();
                $(this).text("Historico [-]");
            }
        });
    });
</script>
<h2>
    Detelhe</h2>
<div class="toolBar">
    @using (Html.BeginForm("Index", "Task", FormMethod.Get, new { @class = "buttons" }))
    {
        <input type="submit" value="Voltar" class="actionButtons" />
    }
    @using (Html.BeginForm("Delete", "Task", FormMethod.Post, new { @class = "buttons" }))
    {
        @Html.Hidden("TaskID", Model.Task.TaskID)
        <input type="submit" value="Excluir" class="actionButtons" onclick="return confirm('Deseja realmente excluir esta atividades')" />
    }
    @using (Html.BeginForm("Edit", "Task", FormMethod.Get, new { @class = "buttons" }))
    {
        @Html.Hidden("TaskID", Model.Task.TaskID)
        <input type="submit" value="Editar" class="actionButtons" />
    }
</div>
<hr />
@{Html.RenderPartial("TaskSummary", Model.Task);}
<hr />
<h3 id="ChangesSection" class="toggleTitle">
    Modificações [-]</h3>
<hr />
<div id="divChanges">
    <div class="toolBar">
        @using (Html.BeginForm("AddChange", "Task", FormMethod.Get, new { @class = "buttons" }))
        {
            @Html.Hidden("taskID", Model.Task.TaskID)
            <input type="submit" value="Add Change" class="actionButtons" />
        }
    </div>
    @if (Model.Task.Changes.Count > 0)
    {
        <table class="Grid">
            <thead>
                <tr>
                    <th>
                        Unidade
                    </th>
                    <th>
                        Modificação
                    </th>
                    <th>
                        Observação
                    </th>
                    <th>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (Change item in Model.Task.Changes)
                {
                    <tr>
                        <td>
                            @Html.ActionLink(@item.Unit, "AddChange", new { taskID = item.TaskID, changeID = item.ChangeID })
                        </td>
                        <td>
                            @item.Modification
                        </td>
                        <td>
                            @item.Note
                        </td>
                        <td class="buttons">
                            @using (Html.BeginForm("DeleteChange", "Task"))
                            {
                                @Html.Hidden("taskID", Model.Task.TaskID)
                                @Html.Hidden("changeID", item.ChangeID)
                                <input type="submit" class="actionButtons" value="Delete" onclick="return confirm('you really want delete this change?')" />
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        @:Nenhuma modificação realizada
                                                }
</div>
<h3 id="HistorySection" class="toggleTitle">
    Historico [-]</h3>
<hr />
<div id="divHistory">
    <div class="toolBar">
        @using (Html.BeginForm("ChangeStatus", "Task", FormMethod.Post, new { @class = "buttons" }))
        {
            @Html.HiddenFor(m => Model.Task.TaskID)
            @Html.DropDownListFor(x => x.SelectedTaskStatusID, new SelectList(Model.Status, "TaskStatusID", "Description"), "Select a new status")
            <input type="submit" value="Modificar" class="actionButtons" />
        }
    </div>
    <table class="Grid">
        <thead>
            <tr>
                <th>
                    Status
                </th>
                <th class="DateCol">
                    Data de Modificação
                </th>
                <th>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (TaskHistory item in Model.Task.History)
            {
                <tr style="background-color:@item.Status.Color; color:black;" >
                    <td>
                        @item.Status.Description
                    </td>
                    <td class="DateCol">
                        @item.HistoryDate.ToShortDateString()
                    </td>
                    <td class="buttons">
                        @if (item.TaskHistoryID != Model.Task.History.Last().TaskHistoryID)
                        {
                            using (@Html.BeginForm("RoolBackStatus", "Task"))
                            {
                            @Html.Hidden("taskID", Model.Task.TaskID)
                            @Html.Hidden("taskHistoryID", item.TaskHistoryID)
                            <input type="submit" value="Rollback" class="actionButtons" onclick="return confirm('You really rollback this status?');" />
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
